# ################################################################################ #
# you do not have to specify everything, pick and choose the options you need only #
# ################################################################################ #

[main::general]
# generate new app auth ticket
new_app_ticket=1
# generate/embed GC token inside new app ticket
gc_token=1
# pretend the app is running on a steam deck
steam_deck=0
# enable avatar functionality
enable_account_avatar=0
# prevent Steam_User_Stats::FindLeaderboard() from always succeeding and creating the unknown leaderboard
# default=0, not recommended to change it
disable_leaderboards_create_unknown=0
# by default, the emu will only save/update stats defined in 'stats.txt', unknown stats requested or updated by the game will be rejected
# set this to 1 to allow unknown stats
allow_unknown_stats=0
# if 0, whenever a game updates a stat which is tied to an achievement progress, the emu will save that stat progress immediately
# some games will update the stat very frequently (with lower & higher values) resulting in a spam of disk writes or overlay notifications
# set this to 1 to save stat progress only on higher progress value, thus avoiding spam of disk writes or overlay notifications
# this has no impact on the stat itself, only the achievement progress of a stat tied to an achievement progress
# also, this has no impact on the functions which directly change stats, achievements, or achievements progress
save_only_higher_stat_achievement_progress=1
# synchronize user stats/achievements with game servers as soon as possible instead of caching them until the next call to `Steam_RunCallbacks()`
# default=0, not recommended to change it
immediate_gameserver_stats=0
# use the proper type of the server list (internet, friends, etc...) when requested by the game
# otherwise, the emu will always return the type 'LAN server'
# default=0, not recommended to change it
matchmaking_server_list_actual_type=0
# grab the server details for match making using an actual server query
# default=0, not recommended to change it
matchmaking_server_details_via_source_query=0
# very basic crash logger/printer
# this is intended to debug some annoying scenarios, and best used with the debug build of the emu
crash_printer_location=./EMU_CRASHES.txt

[main::connectivity]
# prevent hooking OS networking APIs and allow any external requests
# only used by the experimental builds on Windows
disable_lan_only=1
# disable all steam networking interface functionality - this won't prevent games/apps from making external requests
# networking related functionality like lobbies or those that launch a server in the background will not work
disable_networking=0
# change the UDP/TCP port the emulator listens on, you should probably not change this because everyone needs to use the same port or you won't find yourselves on the network
listen_port=47584
# pretend steam is running in offline mode; some games that connect to online servers might only work if the steam emu behaves like steam is in offline mode
offline=0
# prevent sharing stats and achievements with any game server, also disables the interface ISteamGameServerStats
disable_sharing_stats_with_gameserver=0
# do not send server details to the server browser, only works for game servers
disable_source_query=0
# enable sharing leaderboards scores with people playing the same game on the same network
share_leaderboards_over_network=0
# prevent lobby creation in steam matchmaking interface
disable_lobby_creation=0
# attempt to download external HTTP(S) requests made via Steam_HTTP::SendHTTPRequest() inside "steam_settings/http/"
# make sure to:
# * set disable_lan_only=1
# * set disable_networking=0
# this will **not** work if the app is using native/OS web APIs
download_steamhttp_requests=1

############################################
# mostly workarounds for specific problems #
############################################

[main::misc]
# force SetAchievement() to always return true
achievements_bypass=0
# force the function Steam_HTTP::SendHTTPRequest() to always succeed
force_steamhttp_success=0
# env var SteamOverlayGameId breaks Steam Input when the game is added to Steam as a non-steam game
disable_steamoverlaygameid_env_var=1
# add many Steam apps to the list of owned DLCs and the emu's list of installed app IDs, useful for many Source-based games
# https://developer.valvesoftware.com/wiki/Steam_Application_IDs
# https://developer.valvesoftware.com/wiki/Dedicated_Servers_List
enable_steam_preowned_ids=0
